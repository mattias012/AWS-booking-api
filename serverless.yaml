service: booking-api

provider:
  name: aws
  runtime: nodejs20.x
  profile: ${env:AWS_PROFILE}
  region: ${env:REGION}
  role: ${env:AWS_LAMBDA_ROLE_ARN}

package:
  individually: true

plugins:
  - serverless-dotenv-plugin

functions:
  createBooking:
    handler: src/handlers/createBooking/index.handler
    events:
      - http:
          path: bookings
          method: post
          cors: true
    environment:
      DYNAMODB_TABLE_NAME: ${env:DYNAMODB_TABLE_NAME}

  getBooking:
    handler: src/handlers/getBooking/index.handler
    events:
      - http:
          path: bookings/{id}
          method: get
          cors: true
    environment:
      DYNAMODB_TABLE_NAME: ${env:DYNAMODB_TABLE_NAME}

  updateBooking:
    handler: src/handlers/updateBooking/index.handler
    events:
      - http:
          path: bookings/{id}
          method: put
          cors: true
    environment:
      DYNAMODB_TABLE_NAME: ${env:DYNAMODB_TABLE_NAME}

  deleteBooking:
    handler: src/handlers/deleteBooking/index.handler
    events:
      - http:
          path: bookings/{id}
          method: delete
          cors: true
    environment:
      DYNAMODB_TABLE_NAME: ${env:DYNAMODB_TABLE_NAME}

resources:
  Resources:
    BookingsTable:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: ${env:DYNAMODB_TABLE_NAME}
        AttributeDefinitions:
          - AttributeName: bookingId
            AttributeType: S
        KeySchema:
          - AttributeName: bookingId
            KeyType: HASH
        BillingMode: PAY_PER_REQUEST
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
